1、定义函数

def functionName(list of parameters)   #函数头
   函数体
   需要返回值，用return
   不写的话，会返回特殊值None
   写成return或者return None也是返回None，好处是可以终止函数的调用
   
如果需要用到函数，可以先定义主函数main()，执行主函数


2、函数文件（模块）及函数调用
from 文件名（不用.py） import 函数名

如果在同一个模块里，定义两个同名的函数，也不会出现语法错误，但是后一个函数的优先级高

3、变量的作用域
函数内部的是局部变量，另外定义在循环内部的变量也能在循环外部使用
函数之外的是全局变量

4、自带默认参数值的函数

无默认参数写法： 
  def printArea(width,height):
带默认参数写法：
  def printArea(width=1,height=5):
  默认width=1,height=5
  def printArea(width,height=5):
  默认height=5
  
5、返回多个值
  例如：
  def sort(n1,n2):
  .....
  return n1,n2
  
相对的赋值的时候，也要两个变量一起赋值
 
 6、实参与形参
 
 简单来说，调用函数时，实参的值就被传递给了形参，这个值通常是对象的引用
 
 如果实参是一个数字或者字符串，那么不管函数中的形参有没有变化，这个实参都不受影响
 
示例1：
x = 4
y = x
z = 4
print("x's id is ", id(x))
print("y's id is ", id(y))
print("z's id is ", id(z))
输出;
x's id is  140735412622464
y's id is  140735412622464
z's id is  140735412622464



示例2：
from Student import student

def makeStudent(studentline):
    line = studentline.split()
    s = student(line[0], line[1], line[2])
    return s


def exchange(s1, s2):
    s = s1
    s1 = s2
    s2 = s

def main():
    list_student = []
    # 获取学生信息，建立学生表
    inputs = open("student.txt", "r")
    for i in range(5):
        list_student.append(makeStudent(inputs.readline()))

    inputs.close()
    print("Before excahange: "+list_student[0].getName())
    exchange(list_student[0], list_student[1])
    print("After excahange: " + list_student[0].getName())

main()
输出：
Before excahange: Adams,Henry
After excahange: Adams,Henry

示例3：
from Student import student

def makeStudent(studentline):
    line = studentline.split()
    s = student(line[0], line[1], line[2])
    return s


def exchange(s, low, high):
    s1 = s[low]
    s[low] = s[high]
    s[high] = s1


def main():
    list_student = []
    # 获取学生信息，建立学生表
    inputs = open("student.txt", "r")
    for i in range(5):
        list_student.append(makeStudent(inputs.readline()))

    inputs.close()
    print("Before excahange: "+list_student[0].getName())
    exchange(list_student, 0, 1)
    print("After excahange: " + list_student[0].getName())

main()
输出：
Before excahange: Adams,Henry
After excahange: Comptewell,Susan

可见python与对象有关的实参与形参规则，与C++的数组十分相似
